@using ShampanTailor.Models;
@model ShampanTailor.Models.UserGroupVM
@{
    ViewData["Title"] = "User Group Create Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0"> User Group </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    @*<li class="breadcrumb-item"><a href="/SetUp/MenuAuthorization/UserGroup">Index</a></li>
        <li class="breadcrumb-item active">Index</li>*@
                    <li id="btnBack"><img src="~/Content/css/ButtonsIcons/back-icon.png" title="Click for Go Back" /></li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <form id="frm_userGroup">
        <div class="card card-secondary">
            <div class="card-header">
                <h3 class="card-title"> User Group Info </h3>
            </div>

            <div class="card-body">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Operation)
                <div class="form-group row">
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Name)
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control form-control-sm", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

            </div>

        </div>
    </form>


    <div class="card" style="flex-direction: row; justify-content: space-between; align-items: center;">
        <div class="card-header p-2">

            @if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
            {
                <button class="button btnUserGroupSave sslUpdate" type="button" id=""> Update</button>

                <button style="float: right; margin-left: 5px;" type="button" title="Add New" data-url="/SetUp/MenuAuthorization/UserGroupCreate" onclick="GoTo(this)" class="button NewButton addNewButton">
                    New
                </button>
            }
            else
            {
                <div style="display:none;" class="divUpdate">
                    <button class="button btnUserGroupSave sslUpdate" type="button" id="">Update</button>
                    <button style="float: right; margin-left: 5px;" type="button" title="Add New" data-url="/SetUp/MenuAuthorization/UserGroupCreate" onclick="GoTo(this)" class="button NewButton addNewButton">
                        New
                    </button>
                </div>
                <div class="divSave">
                    <button class="button btnUserGroupSave sslSave" type="button" id="">Save</button>
                </div>
            }

        </div>
        <div class="auditshow"> <img src="~/Content/Images/audit.png" title="Click for Audit" /> </div>
    </div>

    <div class="card card-secondary auditcard">

        <div class="card-header">
            <h3 class="card-title">Audit Details</h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-sm-2">
                    <div class="row">
                        @Html.Label("Type")
                    </div>
                </div>
                <div class="col-sm-10">
                    <div class="row">
                        <div class="col-sm-3">
                            @Html.Label("Created")
                        </div>
                        <div class="col-sm-3">
                            @Html.Label("Updated")
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-2">
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.Label("By")<br /><div class="clearfix">&nbsp;</div>
                            @Html.Label("On")<br /><div class="clearfix">&nbsp;</div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-10">
                    <div class="row">
                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.CreatedBy, new { @class = "CreatedBy  form-control form-control-sm ", @readonly = "readonly" })
                            <div class="clearfix">&nbsp;</div>
                            @Html.TextBoxFor(model => model.CreatedOn, new { @class = "CreatedOn  form-control form-control-sm ", @readonly = "readonly" })
                        </div>

                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.LastModifiedBy, new { @class = "LastUpdateBy  form-control form-control-sm lub", @readonly = "readonly" })
                            <div class="clearfix">&nbsp;</div>
                            @Html.TextBoxFor(model => model.LastModifiedOn, new { @class = "LastUpdateOn  form-control form-control-sm luo", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>


@section scripts{

    <script src="~/Areas/SetUp/js/Services/MenuAuthorizationService.js"></script>
    <script src="~/Areas/SetUp/js/Controller/MenuAuthorizationController.js"></script>

    <script>

        $(document).ready(function () {
            MenuAuthorizationController.init();

        });

    </script>

}