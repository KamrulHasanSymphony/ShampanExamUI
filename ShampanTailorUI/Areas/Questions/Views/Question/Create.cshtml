@using Newtonsoft.Json
@model ShampanExam.Models.QuestionVM.QuestionHeaderVM
@{
    ViewBag.Title = "Question Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Tab Container */
    .tab-container {
        width: 553px;
        background: #fff;
        border-radius: 8px 8px 0 0;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Tab List */
    .tab-list {
        margin: 0;
        padding: 0;
        display: flex;
        list-style: none;
        background-color: #f8f8f8;
        border-radius: 8px 8px 0 0;
        border-bottom: 2px solid #ddd;
    }

    /* Tab Item */
    .tab-item {
        margin: 0;
    }

    /* Tab Link */
    .tab-link {
        display: inline-block;
        padding: 15px 40px;
        text-decoration: none;
        color: #777;
        font-weight: bold;
        text-align: center;
        transition: color 0.3s ease, background-color 0.3s ease;
        border-right: 1px solid #ddd;
        cursor: pointer;
        border-radius: 8px 8px 0 0;
    }

    /* Remove border for the last tab */
    .tab-item:last-child .tab-link {
        border-right: none;
    }

    /* Tab Hover Effect */
    .tab-link:hover {
        background-color: #e9e9e9;
        color: #333;
    }

    /* Active Tab */
    .tab-link.active {
        background-color: #e2f0f7;
        border-bottom: 2px solid #1790D2;
    }

    /* Tab Content Wrapper */
    .tab-content-wrapper {
        padding: 20px;
        background-color: #fff;
        border-radius: 0 0 8px 8px;
        box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Tab Content */
    .tab-content {
        display: none;
        text-align: center;
        color: #888;
        font-weight: 300;
        font-size: 15px;
        opacity: 0;
        transform: translateY(15px);
        animation: fadeIn 0.5s ease 1 forwards;
    }

        /* Show Active Tab Content */
        .tab-content.active {
            display: block;
        }
</style>

<div id="tabs">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Question Create</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li id="btnBack"><img src="~/Content/css/ButtonsIcons/back-icon.png" title="Click for Go Back" /></li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="mt-3">
            <div id="tabs-1">
                <form id="frmEntry">
                    <div class="card card-secondary">
                        <div class="card-header">
                            <h3 class="card-title">Question Info</h3>
                        </div>
                        <div class="card-body">
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Operation)

                            @Html.Hidden("QuestionOptionDetailsJson", JsonConvert.SerializeObject(Model.QuestionOptionDetails ?? new List<ShampanExam.Models.QuestionVM.QuestionOptionDetailVM>()))
                            @Html.Hidden("QuestionShortDetailsJson", JsonConvert.SerializeObject(Model.QuestionShortDetails ?? new List<ShampanExam.Models.QuestionVM.QuestionShortDetailVM>()))

                            <div class="form-group row">
                                <!-- Question Subject -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionSubjectId)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.QuestionSubjectId, new { placeholder = "Enter Question Subject", @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionSubjectId)
                                </div>

                                <!-- Question Chapter -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionChapterId)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.QuestionChapterId, new { placeholder = "Enter Question Chapter", @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionChapterId)
                                </div>

                                <!-- Question Category -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionCategorieId)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.QuestionCategorieId, new { placeholder = "Enter Question Category", @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionCategorieId)
                                </div>
                            </div>

                            <div class="form-group row">
                                <!-- Question Text -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionText)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.QuestionText, new { placeholder = "Enter Question Text", @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionText)
                                </div>

                                <!-- Question Type -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionType)
                                    <div class="input-group">
                                        @Html.DropDownListFor(model => model.QuestionType,
                                            new SelectList(Enum.GetNames(typeof(ShampanExam.Models.QuestionVM.QuestionTypeEnum))),
                                            "Select Question Type",
                                            new { @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionType)
                                </div>

                                <!-- Question Mark -->
                                <div class="col-sm-3">
                                    @Html.LabelFor(model => model.QuestionMark)
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.QuestionMark, new { placeholder = "Enter Question Mark", @class = "form-control form-control-sm" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.QuestionMark)
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="card card-secondary">
                                <div class="card-header">
                                    <h3 class="card-title">Question Option Details</h3>
                                </div>
                                <div class="card-body">
                                    <div id="questionOptionDetails"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="card card-secondary">
                                <div class="card-header">
                                    <h3 class="card-title">Question Short Answer Details</h3>
                                </div>
                                <div class="card-body">
                                    <div id="questionShortDetails"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card" style="flex-direction: row; justify-content: space-between; align-items: center;">
                        <div class="card-header p-2">
                            @if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
                            {
                                <button type="button" class="button btnsave sslUpdate">Update</button>
                            }
                            else
                            {
                                <div class="divSave">
                                    <button class="button btnsave sslSave" type="button" id="">Save</button>
                                </div>
                            }
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Areas/Common/js/Services/CommonService.js"></script>
    <script src="~/Areas/Common/js/Services/CommonAjaxService.js"></script>
    <script src="~/Areas/Questions/js/Controllers/QuestionController.js"></script>

    <script>
        $(document).ready(function () {
            QuestionController.init();
        });
    </script>
}
